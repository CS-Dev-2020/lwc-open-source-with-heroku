"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const path = require("path");
const wdio_1 = require("../../messages/wdio");
const logger_1 = require("../../utils/logger");
const spawn = require('child_process').spawn;
class Wdio extends command_1.Command {
    async run() {
        // eslint-disable-next-line no-console
        console.clear();
        logger_1.welcome();
        logger_1.log(wdio_1.messages.logs.starting_wdio);
        const wdioExecutable = path.resolve('node_modules/@wdio/cli/bin/wdio.js');
        const wdioSpawn = spawn('node', [wdioExecutable]);
        wdioSpawn.on('error', (err) => {
            logger_1.log({ message: `${err}`, emoji: 'sos' });
        });
        // It's super weird that the debug message is passed via stderr. But it is what it is.
        wdioSpawn.stderr.on('data', (data) => {
            logger_1.log({ message: `${data}`, emoji: 'rainbow' });
        });
    }
}
exports.default = Wdio;
Wdio.description = wdio_1.messages.description;
Wdio.examples = wdio_1.messages.help.examples;
Wdio.flags = {
    help: command_1.flags.help({ char: 'h' })
};
